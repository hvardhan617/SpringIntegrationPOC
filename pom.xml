<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.javasampleapproach.springintegration</groupId>
	<artifactId>SpringIntegrationInboundComponent</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>SpringIntegrationInboundComponent</name>
	<description>SpringIntegrationInboundComponent</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-integration</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-http</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
         
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
 
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        
       <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
<dependency>
    <groupId>com.fasterxml.jackson.dataformat</groupId>
    <artifactId>jackson-dataformat-xml</artifactId>
    </dependency>

    </dependencies>
 
    <repositories>
        <repository>
            <id>spring-releases</id>
            <name>Spring Releases</name>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
    </repositories>
 
    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>
 
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                
                <configuration>
                <finalName>spring-integration-http-adapters</finalName>
                </configuration>
               </plugin>
               
              <!--  <plugin>
                <groupId>com.spotify</groupId>
			    <artifactId>docker-maven-plugin</artifactId>
			    <version>1.0.0</version>
                
               <configuration>
					<noCache>true</noCache>
					<skipDockerBuild>false</skipDockerBuild>
					<imageName>${docker.image.prefix}/${project.artifactId}:${fabric.version}-${envname}</imageName>
					<dockerDirectory>${basedir}</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
				<executions>
					<execution>
						<id>docker:build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
						
					</execution>
					 <execution>
						<phase>install</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<image>${project.artifactId}</image>
							<newName>${docker.image.prefix}/${project.artifactId}:${fabric.version}-${envname}</newName>
							<serverId>docker-hub</serverId>
							<skipDockerPush>${docker.skippush.image}</skipDockerPush>
						</configuration>
					</execution>   
				</executions>
               </plugin> -->
        </plugins>
    </build>


</project>
